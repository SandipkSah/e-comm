{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/san/Desktop/web_develop/react/e-commerce/src/components/context.js\";\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: storeProducts,\n      detailProduct: detailProduct,\n      cart: [],\n      modalProduct: detailProduct,\n      modalOpen: false,\n      cartSubtotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.counnt = product.count + 1;\n      product.total = pt;\n    };\n\n    this.decrement = id => {\n      console.log(\"this is a decrement method\");\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProducts = tempProducts[index];\n      removedProducts.inCart = false;\n      removedProducts.count = 0;\n      removedProducts.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          product: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => {\n        subTotal += item.total;\n        const temptax = 0.1 * subTotal;\n        const tax = parseFloat(temptax.toFixed(2));\n        const total = subTotal + tax;\n        this.setState(() => {\n          return {\n            cartSubtotal: subTotal,\n            cartTax: tax,\n            cartTotal: total\n          };\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductConsumer, ProductProvider };","map":{"version":3,"sources":["/home/san/Desktop/web_develop/react/e-commerce/src/components/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalProduct","modalOpen","cartSubtotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","counnt","pt","decrement","console","log","removeItem","filter","removedProducts","clearCart","subTotal","map","temptax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  state = {\n    products: storeProducts,\n    detailProduct: detailProduct,\n    cart: [],\n    modalProduct: detailProduct,\n    modalOpen: false,\n    cartSubtotal: 0,\n    cartTax: 0,\n    cartTotal: 0,\n  };\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  setProducts = () => {\n    let tempProducts = [];\n    storeProducts.forEach((item) => {\n      const singleItem = { ...item };\n      tempProducts = [...tempProducts, singleItem];\n    });\n    this.setState(() => {\n      return { products: tempProducts };\n    });\n  };\n\n  getItem = (id) => {\n    const product = this.state.products.find((item) => item.id === id);\n    return product;\n  };\n\n  handleDetail = (id) => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return { detailProduct: product };\n    });\n  };\n\n  addToCart = (id) => {\n    let tempProducts = [...this.state.products];\n    const index = tempProducts.indexOf(this.getItem(id));\n    const product = tempProducts[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n    this.setState(\n      () => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product],\n        };\n      },\n      () => {\n        this.addTotals();\n      }\n    );\n  };\n\n  openModal = (id) => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return { modalProduct: product, modalOpen: true };\n    });\n  };\n\n  closeModal = () => {\n    this.setState(() => {\n      return { modalOpen: false };\n    });\n  };\n\n  increment = (id) => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find(item =>item.id === id);\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.counnt = product.count + 1;\n    product.total = pt\n  };\n\n  decrement = (id) => {\n    console.log(\"this is a decrement method\");\n  };\n\n  removeItem = (id) => {\n    let tempProducts = [...this.state.products];\n    let tempCart = [...this.state.cart];\n    tempCart = tempCart.filter(item =>item.id !==id);\n    const index = tempProducts.indexOf(this.getItem(id));\n    let removedProducts = tempProducts[index];\n    removedProducts.inCart = false;\n    removedProducts.count=0;\n    removedProducts.total = 0;\n\n    this.setState(()=>{\n      return{\n        cart:[...tempCart],\n        product:[...tempProducts]\n        \n      }\n    },()=>{\n      this.addTotals();\n    })\n  };\n\n  clearCart = () => {\n    this.setState(\n      () => {\n        return { cart: [] };\n      },\n      () => {\n        this.setProducts();\n        this.addTotals();\n      }\n    );\n  };\n\n  addTotals = () => {\n    let subTotal = 0;\n    this.state.cart.map((item) => {\n      subTotal += item.total;\n      const temptax = 0.1 * subTotal;\n      const tax = parseFloat(temptax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubtotal: subTotal,\n          cartTax: tax,\n          cartTotal: total,\n        };\n      });\n    });\n  };\n\n  render() {\n    return (\n      <ProductContext.Provider\n        value={{\n          ...this.state,\n          handleDetail: this.handleDetail,\n          addToCart: this.addToCart,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          increment: this.increment,\n          decrement: this.decrement,\n          removeItem: this.removeItem,\n          clearCart: this.clearCart,\n        }}\n      >\n        {this.props.children}\n      </ProductContext.Provider>\n    );\n  }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductConsumer, ProductProvider };\n"]},"metadata":{},"sourceType":"module"}